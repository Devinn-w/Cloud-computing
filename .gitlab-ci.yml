stages:
  - deploy
  - verify

variables:
  KUBECONFIG: /root/.kube/config
  FISSION_URL: http://localhost:9090

deploy-fission-specs:
  stage: deploy
  image: alpine:latest
  script:
    - apk add --no-cache curl bash zip
    - echo "Downloading Fission CLI..."
    - curl -Lo fission https://github.com/fission/fission/releases/download/v1.21.0/fission-v1.21.0-linux-amd64
    - chmod +x fission && mv fission /usr/local/bin/

    - mkdir -p /root/.kube
    - echo "$KUBECONFIG_DATA" > /root/.kube/config
    - chmod 600 /root/.kube/config
    - export KUBECONFIG=/root/.kube/config
    
    - cd backend
    # Automatically compress each module
    - echo "Zipping mharvester..."
    - cd mharvester && chmod +x build.sh && zip -r mharvest.zip . && mv mharvest.zip ../ && cd ..
    - echo "Zipping rharvester..."
    - cd rharvester && chmod +x build.sh && zip -r rharvest.zip . && mv rharvest.zip ../ && cd ..

    - echo "Validating specs..."
    - fission spec validate
    - echo "Applying specs..."
    - fission spec apply --specdir specs --wait

verify-es-ingest:
  stage: verify
  image: alpine:latest
  script:
    - apk add --no-cache curl jq
    - curl -s https://elasticsearch-master.elastic.svc.cluster.local:9200/mastodon-posts/_count | jq .
    - curl -s https://elasticsearch-master.elastic.svc.cluster.local:9200/reddit-posts/_count | jq .

test-fission-functions:
  stage: verify
  image: alpine:latest
  variables:
    FISSION_URL: "http://127.0.0.1:9090"
  script:
    - apk add --no-cache curl jq
    - curl -s -X POST "$FISSION_URL/mharvest" | jq .
    - curl -s -X POST "$FISSION_URL/rharvest" | jq .

